package view;

import DAO.DKLichDAO;
import DAO.ConnectDB;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class QuanLy_DangKyTH extends javax.swing.JFrame {

    DefaultTableModel TableDK;
    DKLichDAO conn = new DKLichDAO();

    public QuanLy_DangKyTH() {
        initComponents();
        TableDK = new DefaultTableModel();
        TableDK.addColumn("STT");
        TableDK.addColumn("Mã đăng ký");
        TableDK.addColumn("Mã lớp");
        TableDK.addColumn("Nhóm");
        TableDK.addColumn("Số lượng SV");
        TableDK.addColumn("Tên môn học");
        TableDK.addColumn("Giáo viên");
        TableDK.addColumn("Tuần");
        TableDK.addColumn("Thứ");
        TableDK.addColumn("Phòng");
        TableDK.addColumn("Ca");
        tblThongKe.setModel(TableDK);
        LoadTableThongKe();
        tblThongKe.removeColumn(tblThongKe.getColumnModel().getColumn(1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblThongKe = new javax.swing.JTable();
        btDangKy = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        butxoa = new javax.swing.JButton();
        btBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblThongKe.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                tblThongKeComponentHidden(evt);
            }
        });
        jScrollPane1.setViewportView(tblThongKe);

        btDangKy.setText("Thêm lịch");
        btDangKy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDangKyActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 51));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/outline_format_list_bulleted_black_24dp.png"))); // NOI18N
        jLabel1.setText("Thống kê lịch đăng ký thực hành khoa CNTT");

        butxoa.setText("Xóa");
        butxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butxoaActionPerformed(evt);
            }
        });

        btBack.setText("Quay lại");
        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(469, 469, 469)
                                .addComponent(btDangKy)
                                .addGap(231, 231, 231)
                                .addComponent(butxoa))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btBack)
                                .addGap(319, 319, 319)
                                .addComponent(jLabel1)))
                        .addGap(0, 392, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btBack)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btDangKy)
                    .addComponent(butxoa))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btDangKyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDangKyActionPerformed
        new Form_DKQL(this, true).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btDangKyActionPerformed

    private void butxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butxoaActionPerformed
        Connection con;
        PreparedStatement pstmt;
        int vt = tblThongKe.getSelectedRow();
        if (vt >= 0) {
            con = ConnectDB.getConnectDB();
            try {
                pstmt = con.prepareStatement("Delete from LICH_PHONG where maDK='" + tblThongKe.getModel().getValueAt(vt, 1) + "'");
                int i = pstmt.executeUpdate();
                if (i > 0) {
                    LoadTableThongKe();
                    vt = -1;
                    JOptionPane.showMessageDialog(null, "Xóa thành công!!");
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa thất bại!!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Lop_view.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Chọn ô cần xóa!!");
        }
    }//GEN-LAST:event_butxoaActionPerformed

    private void tblThongKeComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tblThongKeComponentHidden

    }//GEN-LAST:event_tblThongKeComponentHidden

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        new Home_view().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLy_DangKyTH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLy_DangKyTH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLy_DangKyTH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLy_DangKyTH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLy_DangKyTH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBack;
    private javax.swing.JButton btDangKy;
    private javax.swing.JButton butxoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblThongKe;
    // End of variables declaration//GEN-END:variables

    private void LoadTableThongKe() {
        TableDK.setRowCount(0);
        Connection con = ConnectDB.getConnectDB();
        try {
            PreparedStatement pstmt = con.prepareStatement("select maDK,LOP.maLop,nhom,LOP.soLuongSV,MONHOC.tenMon,GV.tenGV,tuan,thu,PHONG.tenPhong,ca "
                    + "from LICH_PHONG inner join LOP  ON LOP.maLop= LICH_PHONG.maLop inner join MONHOC ON LOP.maMon= MONHOC.maMon"
                    + " inner join GV on LOP.maGV= GV.maGV inner join PHONG ON LICH_PHONG.maPhong= PHONG.maPhong");
            ResultSet rs = pstmt.executeQuery();
            int i = 1;
            while (rs.next()) {
                Object[] dt = {i++, rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4),
                    rs.getString(5), rs.getString(6), rs.getInt(7), rs.getInt(8), rs.getString(9), rs.getInt(10)};
                TableDK.addRow(dt);
            }
        } catch (SQLException ex) {
            Logger.getLogger(QuanLy_DangKyTH.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
